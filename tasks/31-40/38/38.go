package main

import (
	"fmt"
	"sync"
)

//==========================================
//Задача 1
//Что выведет код? Исправить все проблемы
//==========================================

func main() {
	// изначально будет дедлок, потому что канал не закрыт.
	// чтобы это предотвратить, можно предложить 2 способа:
	// 1. сделать канал буферизированным
	// 2. использовать паттерн закрытия канала и ожидания завершения горутин
	ch := make(chan int)
	wg := &sync.WaitGroup{}
	wg.Add(3)
	for i := 0; i < 3; i++ {
		go func(v int) {
			defer wg.Done()
			ch <- v * v
		}(i)
	}

	go func() {
		wg.Wait()
		close(ch)
	}()

	var sum int
	for v := range ch {
		sum += v
	}
	fmt.Printf("result: %d\n", sum) // result: 5
}
